
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is a member of a project
    function isProjectMember(projectId) {
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.teamIds;
    }

    // Helper function to check if user is a member of a team
    function isTeamMember(teamId) {
      return request.auth.uid in get(/databases/$(database)/documents/teams/$(teamId)).data.memberIds;
    }

    match /projects/{projectId} {
      allow read: if isProjectMember(projectId);
      allow create: if request.auth != null;
      allow update, delete: if resource.data.ownerId == request.auth.uid || get(/databases/$(database)/documents/projects/$(projectId)).data.team.matchesAny(member, member.id == request.auth.uid && member.role == 'Admin');
      
      match /tasks/{taskId} {
        allow read, write: if isProjectMember(projectId);
      }
    }
    
    match /teams/{teamId} {
      allow read: if isTeamMember(teamId);
      allow create: if request.auth != null;
      allow update, delete: if resource.data.ownerId == request.auth.uid;
    }
  }
}
