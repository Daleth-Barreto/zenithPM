
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is part of a project's team
    function isProjectMember(projectId) {
      return request.auth != null && get(/databases/$(database)/documents/projects/$(projectId)).data.teamIds[request.auth.uid] == true;
    }

    // Rules for projects collection
    match /projects/{projectId} {
      allow read: if request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.teamIds;
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if get(/databases/$(database)/documents/projects/$(projectId)).data.team.filter(member => member.id == request.auth.uid && member.role == 'Admin').size() > 0;
      
      // Rules for tasks subcollection
      match /tasks/{taskId} {
      	allow read, write: if request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.teamIds;
      }
    }

    // Rules for teams collection
    match /teams/{teamId} {
      allow read: if request.auth.uid in resource.data.memberIds;
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if get(/databases/$(database)/documents/teams/$(teamId)).data.members.filter(member => member.id == request.auth.uid && member.role == 'Admin').size() > 0;
    }
  }
}
